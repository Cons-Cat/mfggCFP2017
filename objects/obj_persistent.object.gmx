<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Object screen scaling and rendering (Empty Event)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset the message

message = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center the window

window_center()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug key for the pixel size thing
pixel_size *= 1.03125
event_user(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hotkeys!!!!

//End the game
if (keyboard_check_pressed(vk_f4))
    game_end()
    
//Restart the game
else if (keyboard_check_pressed(ord('R'))) {
    audio_stop_all()
    game_restart()
}

//Toggle fullscreen
else if (keyboard_check_pressed(vk_enter)) {
    if (screen_size &lt; 4) {
        screen_size = 4
        message = "FULLSCREEN ON"
        window_set_fullscreen(1)
    }
    else {
        screen_size = 1
        message = "FULLSCREEN OFF"
        window_set_fullscreen(0)
    }
    
    //Resize application surface and center the window
    event_user(1)
}

//Toggle VSync
else if (keyboard_check_pressed(ord('V'))) {
    vsync = !vsync
    
    if (vsync)
        message = "VSYNC ON"
    else
        message = "VSYNC OFF"
        
    display_reset(0,vsync)
}

//Toggle FPS display
else if (keyboard_check_pressed(ord('F')))
    show_fps = !show_fps
    
//Reset the status message
alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resize the window and the application surface

//Set the window size
window_set_size(global.screen_width*screen_size,global.screen_height*screen_size)

///Resize the application surface
view_wport = window_get_width()/pixel_size
view_hport = window_get_height()/pixel_size
surface_resize(application_surface, view_wport, view_hport)

//Center the window with a delay
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables and shit

//FPS counter
show_fps = 0

//Status messages for Alt + something key presses
message = ""

//For SMW like screen transistions without stupid shaders
pixel_size = 1

//Game view size
global.screen_width = 480
global.screen_height = 270

//Fonts TODO
//global.font = font_add_sprite(spr_font, ord('!'), 0, 0)

//Disable drawing the application surface, we will do that manually &gt;:]
application_surface_draw_enable(0)

//Load the settings
if (file_exists("settings.dat")) {
    var file = file_text_open_read("settings.dat")
    
    screen_size = real(file_text_read_string(file))
    file_text_readln(file)
    vsync = real(file_text_read_string(file))

    file_text_close(file)
} else {
    screen_size = 1
    vsync = 1
}

//Apply the settings
display_reset(0,vsync)

if (screen_size &lt; 3) {
    window_set_fullscreen(0)
}
else
    window_set_fullscreen(1)

//Resize the window and the application surface
event_user(1)

alarm[2] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Application surface and shader stuff

//Draw the application surface manually
draw_set_color(c_white)
draw_surface_stretched(application_surface,0,0,window_get_width(),window_get_height())
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the status message

//draw_set_font(global.font)

if (message != "")
    draw_text_transformed(4,4,string(message),window_get_width()/global.screen_width,window_get_height()/global.screen_height,0)
    
//Draw the FPS if that's a thing
else if (show_fps)
    draw_text_transformed(4,4,string(fps),window_get_width()/global.screen_width,window_get_height()/global.screen_height,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change the screen size
if (screen_size &lt; 4)
    screen_size += 1
else
    screen_size = 1

//Set the status message
if (screen_size &gt;= 4) {
    window_set_fullscreen(1)
    message = "FULLSCREEN ON"
} else {
    window_set_fullscreen(0)
    message = string(screen_size) + "X WINDOW"
}
    
//Actual changing part
event_user(1)
    
alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
