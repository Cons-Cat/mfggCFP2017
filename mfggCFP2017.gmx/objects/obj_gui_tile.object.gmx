<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_solid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The tile to be spawned
instance = obj_mushroom;
spriteVal = spr_solid;

startx = self.x;
starty = self.y;
ax = 0;
ay = 0;

playVar = 0;

select = 0;
selSTOP = 0;

gone = 0;
offsetX = 0;
offsetY = 0;

//The lowest the y will ever get when hoppinh
yFloor = y;

//Hopping state
jump = 0;

asdf = 0;
agg = 0;
went = 0;
canPlace = 0;
notSelect = 0;

//Enemy/Item dragging
altDrag = 0;
sick = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow the player to place tiles again
canPlace = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = 0;
y = yFloor+8;
notSelect = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hop again
if vspeed = 0{
    jump = 0;
    asdf = 0;
    went = 0;
    agg = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Getting the sprite
if obj_editor_gui.inEditor = 1{
    if instance = obj_solid{
        sprite_index = spr_solid;
    }
    if instance = obj_mushroom{
        sprite_index = spr_mushroom;
    }
    
    spriteVal = sprite_index;
}

//Compensating for offsets
if obj_editor_gui.inEditor = 1{
    if gone = 0{
        if instance = obj_solid{
            offsetX = 0;
            yFloor = 0;
            altDrag = 0;
        }
        if instance = obj_mushroom{
            offsetX = 0;
            yFloor = 0;
            altDrag = 1;
        }
    }
    
    gone = 1;
}

//Hopping when selected
if select = 1{
    if obj_editor_gui.inEditor = 1{
        
        if agg = 0{
            agg = 1;
            
            if jump = 0{
                vspeed = -5;
            }
        }
        
        if vspeed &gt; 0{
            if asdf = 0{
                jump += 1;
                asdf = 1;
            }
        }
        if vspeed = 0{
            asdf = 0;
        }
    gravity = 0.5;
    }
    
    if vspeed = 0{
        if went = 0{
            went = 1;
            alarm[0] = 60;
        }
    }
}

if y &gt; yFloor+8{
    y = yFloor+8;
    
    if jump = 1{
        vspeed = -3;
        y -= 1;
    }
    if jump = 2{
        vspeed = -1;
        y -= 1;
    }
    if jump = 3{
        vspeed = 0;
    }
}

///Hop again
if select = 0{
    jump = 0;
    asdf = 0;
    went = 0;
    agg = 0;
}

//Selecting
if mouse_x &gt;= self.x+offsetX &amp;&amp; mouse_x &lt;= self.x+sprite_width+offsetX &amp;&amp; mouse_y &gt;= self.y+offsetY &amp;&amp; mouse_y &lt;= self.y+sprite_height+offsetY{
    if mouse_check_button_pressed(mb_left){
        obj_gui_tile.select = 0;
        self.select = 1;
    }
}

//Placing
if select = 1{
    if mouse_check_button(mb_left){
        if mouse_y &gt; 32{
            if altDrag = 0{
                if !collision_point(mouse_x,mouse_y,obj_superparent,false,false){
                    with instance_create(mouse_x,mouse_y,instance){
                        held = 0;
                        
                        x = floor(x/16)*16;
                        y = floor(y/16)*16;
                    }
                }
            } else {
                if holding = 0{
                    if !collision_point(mouse_x-8,mouse_y-8,obj_superparent,false,false){
                        with instance_create(mouse_x-8,mouse_y-8,instance){
                            held = 1;
                        }
                        
                        holding = 1;
                    }
                
                }
            }
        }
    }
    if mouse_check_button_released(mb_left){
        holding = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y-view_yview[0]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
